swagger: "2.0"
info:
    description: This is a meta-swagger file that includes definitions for several apis which all use the same object types. A tool will be built to convert this file into multiple swagger files.
responses:
    NotImplemented:
        description: Endpoint not yet implemented
    NotAuthorized:
        description: 'You do not have necessary permissions for the resource'
apis:
    defaults:
        schemes:
            - https
        consumes:
            - application/json
        produces:
            - application/json;charset=UTF-8
        securityDefinitions:
          Bearer:
            type: apiKey
            name: Authorization
            in: header
    public:
        info:
            title: public transit api
            description: Publicly available data about the transit system
            version: "1.0"
        basePath: /v1
        paths:
            /routes:
                get:
                    tags:
                        - routes
                    description: Returns a list of all routes in the system
                    x-mojo-to: 'route#list'
                    responses:
                        '200':
                            description: A list of routes
                            schema:
                                type: array
                                items:
                                    $ref: '#/definitions/Route'
            '/routes/{route_id}/stops':
                parameters:
                    - name: route_id
                      in: path
                      type: string
                      format: uuid
                      required: true
                get:
                    tags:
                        - routes
                    description: Returns a list of stops on a route
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: A list of stops
                            schema:
                                type: array
                                items:
                                    $ref: '#/definitions/Stop'
            /stops:
                get:
                    tags:
                        - stops
                    description: Returns a list of all stops in the system
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: A list of stops
                            schema:
                                type: array
                                items:
                                    $ref: '#/definitions/Stop'
            '/stops/{stop_id}':
                parameters:
                  - name: stop_id
                    in: path
                    type: string
                    format: uuid
                    required: true
                get:
                    description: summary of information for a stop, including eta information
                    tags:
                        - stops
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: Information about a stop
                            schema:
                                $ref: '#/definitions/Stop'
            /vendors:
                get:
                    tags:
                        - vendors
                    description: Returns a list of places to buy passes and tokens
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: A list of vendors
                            schema:
                              type: array
                              items:
                                $ref: '#/definitions/Vendor'
            /gtfs:
                get:
                    tags:
                        - transit_feed
                    description: Google Transit Feed
                    produces:
                        - application/zip
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: a zip file in the GTFS format
                            schema:
                                type: file

            /gtfs/realtime/trips:
                get:
                    description: GTFS Realtime Trip Updates
                    tags:
                        - transit_feed
                    produces:
                        - application/x-protobuf
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: a response in the GTFS-realtime format
                            schema:
                                type: file

            /gtfs/realtime/alerts:
                get:
                    tags:
                        - transit_feed
                    description: GTFS Realtime Service Alerts
                    produces:
                        - application/x-protobuf
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: a response in the GTFS-realtime format
                            schema:
                                type: file
    ride:
        info:
            title: internal transit api
            description: API used by vehicles to manage passes and travel
            version: "1.0"
        basePath: /v1
        x-role: drive
        security:
            - Bearer: []

        paths:
            /sessions:
                post:
                    description: Start a new Route Session
                    x-mojo-to: routesession#create
                    parameters:
                      - name: session
                        in: body
                        required: true
                        schema:
                            $ref: '#/definitions/RouteSession'
                    responses:
                        '200':
                            description: A new Route Session
                            schema:
                                $ref: '#/definitions/RouteSession'
            '/sessions/{session_id}':
                parameters:
                    - name: session_id
                      in: path
                      type: string
                      format: uuid
                      required: true
                post:
                    description: Update information about the session
                    x-mojo-to: routesession#update
                    parameters:
                      - name: session
                        in: body
                        required: true
                        schema:
                            $ref: '#/definitions/RouteSession'
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: the updated RouteSession object
                            schema:
                              $ref: '#/definitions/RouteSession'
            '/sessions/{session_id}/ride':
                parameters:
                    - name: session_id
                      in: path
                      type: string
                      format: uuid
                      required: true
                post:
                    description: Submit a pass or token to register a ride
                    parameters:
                        - name: pass
                          in: body
                          required: true
                          schema:
                              $ref: '#/definitions/Pass'
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: the created ride log item
                            schema:
                                $ref: '#/definitions/Ride'
    vend:
        info:
            title: internal vending api
            description: API used by vending machines to manage tokens and passes
            version: "1.0"
        basePath: /v1

        paths:
            /passes:
                post:
                    description: create a new pass
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: the newly created pass
                            schema:
                                $ref: '#/definitions/Pass'
            '/passes/{pass_id}':
                parameters:
                    - name: vendor_id
                      in: path
                      type: string
                      format: uuid
                      required: true
                get:
                    description: check the current status of a pass
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: Information about the pass in the url
                            schema:
                                $ref: '#/definitions/Pass'
            '/vendors/{vendor_id}':
                parameters:
                    - name: vendor_id
                      in: path
                      type: string
                      format: uuid
                      required: true
                post:
                    description: update status of vending machine
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: updated record for the Vendor
                            schema:
                                $ref: '#/definitions/Vendor'
    manage:
        info:
            title: manager transit api
            version: "1.0"
        basePath: /v1
        x-role: manage
        security:
            - Bearer: []
        paths:
            /auth/token:
                post:
                    parameters:
                        - name: credentials
                          in: body
                          required: true
                          schema:
                            type: object
                            required: [ 'email','password' ]
                            properties:
                                email:
                                    type: string
                                    format: email
                                passord:
                                    type: string
                                    format: password
                    security: []
                    tags:
                        - authorization
                    description: submit user credentials to receive a JSON web token
                    x-mojo-to: 'authorize#get_token'
                    responses:
                        '200':
                            description: A JWT
                            schema:
                                type: string
                        '401':
                            description: Failed login
                get:
                    tags:
                        - authorization
                    description: submit about-to-expire JSON web token to receive a replacement
                    x-mojo-to: 'authorize#refresh_token'
                    responses:
                        '200':
                            description: A JWT
                            schema:
                                type: string
                        '401':
                            description: Cannot refresh with provided token
            /auth/reset:
                post:
                    description: generate a temporary password reset token, emailed to the proper user
                    security: []
                    x-mojo-to: authorize#create_password_reset
                    parameters:
                        - name: credentials
                          in: body
                          required: true
                          schema:
                            type: object
                            required: [ 'email' ]
                            properties:
                                email:
                                    type: string
                                    format: email
                    responses:
                        '200':
                            description: token created
            /auth/reset/{uuid}:
                get:
                    description: validate a temporary password reset token
                    security: []
                    x-mojo-to: authorize#check_password_reset
                    responses:
                        '200':
                            description: the token is valid
                        '410':
                            description: the token has expired
                        '404':
                            description: no matching token
                post:
                    description: reset password tied to the reset token
                    security: []
                    x-mojo-to: authorize#do_password_reset
                    parameters:
                        - name: credentials
                          in: body
                          required: true
                          schema:
                            type: object
                            required: [ password' ]
                            properties:
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
                    responses:
                        '200':
                            description: successfully reset password
            /vehicles:
                get:
                    tags:
                        - vehicles
                    description: Returns a list of vehicles in the system
                    x-mojo-to: 'vehicle#list'
                    responses:
                        '200':
                            description: A list of vehicles
                            schema:
                                type: array
                                items:
                                    $ref: '#/definitions/Vehicle'
                post:
                    tags:
                        - vehicles
                    description: add a new vehicle
                    x-mojo-to: 'vehicle#create'
                    responses:
                        '200':
                            description: The newly created vehicle
                            schema:
                                $ref: '#/definitions/Vehicle'
            '/vehicles/{uuid}':
                get:
                    tags:
                        - vehicles
                    description: Returns a vehicle in the system
                    x-mojo-to: 'vehicle#fetch'
                    responses:
                        '200':
                            description: The vehicle identified by the uuid
                            schema:
                                $ref: '#/definitions/Vehicle'
                post:
                    tags:
                        - vehicles
                    description: update a vehicle
                    x-mojo-to: 'vehicle#update'
                    responses:
                        '200':
                            description: The updated vehicle
                            schema:
                                $ref: '#/definitions/Vehicle'
                delete:
                    tags:
                        - vehicles
                    description: delete or archive a vehicle
                    x-mojo-to: 'vehicle#delete'
                    responses:
                        '200':
                            description: Success or failure indicator
                            schema:
                                type: boolean
            /routes:
                get:
                    tags:
                        - routes
                    description: Returns a list of all routes in the system
                    x-mojo-to: 'route#list'
                    responses:
                        '200':
                            description: A list of routes
                            schema:
                                type: array
                                items:
                                    $ref: '#/definitions/Route'
                post:
                    tags:
                        - routes
                    description: Create a new Route
                    x-mojo-to: 'route#create'
                    parameters:
                    - in: body
                      name: model
                      required: true
                      schema:
                        $ref: '#/definitions/Route'
                    responses:
                        '200':
                            description: The newly created route
                            schema:
                                $ref: '#/definitions/Route'
            '/routes/{uuid}':
                get:
                    tags:
                        - routes
                    description: Returns a route in the system
                    x-mojo-to: 'route#fetch'
                    responses:
                        '200':
                            description: The route identified by the uuid
                            schema:
                                $ref: '#/definitions/Route'
                post:
                    description: create a new route
                    x-mojo-to: 'route#update'
                    parameters:
                    - in: body
                      name: model
                      required: true
                      schema:
                        $ref: '#/definitions/Route'
                    responses:
                        '200':
                            description: newly created route
                            schema:
                                $ref: '#/definitions/Route'
            /stops:
                get:
                    tags:
                        - stops
                    description: Returns a list of all stops in the system
                    x-mojo-to: 'stop#list'
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: A list of stops
                            schema:
                                type: array
                                items:
                                    $ref: '#/definitions/Stop'
                post:
                    tags:
                        - stops
                    description: Create a new Stop
                    x-mojo-to: 'stop#create'
                    parameters:
                    - in: body
                      name: model
                      required: true
                      schema:
                        $ref: '#/definitions/Stop'
                    responses:
                        '200':
                            description: The newly created stop
                            schema:
                                $ref: '#/definitions/Stop'
            '/stops/{uuid}':
                post:
                    tags:
                        - stops
                    description: update a stop
                    x-mojo-to: 'stop#update'
                    parameters:
                    - in: body
                      name: model
                      required: true
                      schema:
                        $ref: '#/definitions/Stop'
                    responses:
                        '200':
                            description: The updated stop
                            schema:
                                $ref: '#/definitions/Stop'
                delete:
                    tags:
                        - stops
                    description: delete or archive a stop
                    x-mojo-to: 'stop#delete'
                    responses:
                        '200':
                            description: Success or failure indicator
                            schema:
                                type: boolean
            /sessions:
                get:
                    description: List route session history
                    parameters:
                      - name: status
                        in: query
                        type: string
                        enum:
                            - active
                            - ended
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: A list of sessions that match the query
                            schema:
                                type: array
                                items:
                                    $ref: '#/definitions/RouteSession'
            '/sessions/{session_id}':
                parameters:
                  - name: session_id
                    in: path
                    type: string
                    format: uuid
                    required: true
                get:
                    description: Get information on a session
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: Route Session Information
                            schema:
                                $ref: '#/definitions/RouteSession'
                post:
                    description: manipulate a session (for active sessions only)
                    responses:
                        '501':
                            $ref: '#/responses/NotImplemented'
                        '200':
                            description: Updated Route Session Information
                            schema:
                                $ref: '#/definitions/RouteSession'
